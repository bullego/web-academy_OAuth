{"version":3,"sources":["components/App/routes.tsx","components/Login/Login.tsx","components/Dashboard/Dashboard.tsx","components/UserProfile/UserProfile.tsx","components/NotFound/NotFound.tsx","utils/localstorage.ts","components/Authorization/Authorization.tsx","components/ProtectedRoute/ProtectedRoute.tsx","components/App/App.tsx","index.tsx"],"names":["ROUTES_URLS","process","REACT_APP_API_KEY","REACT_APP_NAME","REACT_APP_SCOPE","REACT_APP_REDIRECT_URL","Login","requestUrl","className","href","React","Dashboard","state","boards","getBoards","props","token","userName","url","console","log","fetch","then","response","status","Error","json","setBoards","catch","err","setState","this","showBoards","map","el","indx","key","name","UserProfile","userData","username","fullName","email","avatarUrl","setUserData","newUserData","src","alt","NotFound","routes","path","LOGIN","exact","title","render","DASHBOARD","isProtected","USER_PROFILE","HOME","isHidden","to","NOT_FOUND","setToLocalStorage","data","window","localStorage","setItem","JSON","stringify","Authorization","hash","location","onSetToken","split","pathname","ProtectedRoute","isAuthenticated","rest","routeCompPrps","from","INITIAL_STATE","userProfile","undefined","App","setProfile","setToken","someValue","logOut","goToLogin","renderRoute","route","isLoggedIn","getToken","parse","getItem","ok","goToUserProfile","history","push","link","onClick","AUTHORIZATION","renderHeader","renderContent","AppWithRouter","withRouter","application","ReactDOM","document","querySelector"],"mappings":"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","file":"static/js/main.196d27f3.chunk.js","sourcesContent":["import * as React from 'react';\nimport { Redirect, RouteChildrenProps } from 'react-router-dom';\nimport { Login } from '../Login';\nimport { Dashboard } from '../Dashboard';\nimport { UserProfile } from '../UserProfile';\nimport { NotFound } from '../NotFound';\n\n\nexport enum ROUTES_URLS {\n\tHOME = '/',\n\tLOGIN = '/login',\n\tDASHBOARD = '/dashboard',\n\tUSER_PROFILE = '/userprofile',\n\tAUTHORIZATION = '/authorization',\n\tNOT_FOUND = '/404',\n}\n\nexport interface AppRoute {\n\tpath: ROUTES_URLS,\n\texact?: boolean,\n\trender: (props: any) => any,\n\ttitle?: string,\n\tisHidden?: boolean,\n\tisProtected?: boolean\n}\n\n\nexport const routes: Array<AppRoute> = [\n\t{\n\t\tpath: ROUTES_URLS.LOGIN,\n\t\texact: true,\n\t\ttitle: 'Go to Home/Login',\n\t\trender: (props: any) => <Login {...props}/>\n\t},\n\t{\n\t\tpath: ROUTES_URLS.DASHBOARD,\n\t\texact: false,\n\t\ttitle: 'Go to Dashboard',\n\t\tisProtected: true,\n\t\trender: (props: RouteChildrenProps) => <Dashboard {...props} />\n\t},\n\t{\n\t\tpath: ROUTES_URLS.USER_PROFILE,\n\t\texact: false,\n\t\ttitle: 'Go to User Profile',\n\t\tisProtected: true,\n\t\trender: (props: RouteChildrenProps) => <UserProfile {...props} />\n\t},\n\t{\n\t\tpath: ROUTES_URLS.HOME,\n\t\texact: true,\n\t\tisHidden: true,\n\t\trender: () => <Redirect to={ROUTES_URLS.LOGIN}/>\n\t},\n\t{\n\t\tpath: ROUTES_URLS.NOT_FOUND,\n\t\tisHidden: true,\n\t\trender: (props: RouteChildrenProps) => <NotFound {...props}/>\n\t}\n]","import * as React from 'react';\nimport './Login.scss';\n\nconst { REACT_APP_API_KEY, REACT_APP_NAME, REACT_APP_SCOPE, REACT_APP_REDIRECT_URL } = process.env;\n\nexport class Login extends React.Component {\n\trender() {\n\t\tconst requestUrl = `https://trello.com/1/authorize?return_url=${REACT_APP_REDIRECT_URL}&expiration=1day&name=${REACT_APP_NAME}&scope=${REACT_APP_SCOPE}&response_type=token&key=${REACT_APP_API_KEY}`;\n\n\t\treturn(\n\t\t\t<div className='Login'>\n\t\t\t\t<a href={requestUrl}>Login with Trello account</a>\n\t\t\t\t<h2>Please log in</h2>\n\t\t\t</div>\n\t\t)\n\t}\n}","import * as React from 'react';\nimport { RouteChildrenProps } from 'react-router';\nimport './Dashboard.scss';\n\n\nconst { REACT_APP_API_KEY } = process.env;\n\n\ninterface PropsDashboard extends RouteChildrenProps {\n\ttoken?: string;\n\tuserName?: string;\n}\ninterface Board {\n\tid: string;\n\tname: string;\n\tdesc?: string;\n\tpinned?: boolean;\n}\ninterface DashState {\n\tboards: Array<Board>;\n}\n\nexport class Dashboard extends React.Component<PropsDashboard, DashState> {\n\tstate = {\n\t\tboards: []\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.getBoards();\n\t}\n\n\tprivate getBoards = () => {\n\t\t//console.log('props from app to dash: ', this.props);\n\t\t\n\t\tconst { token, userName } = this.props;\n\t\tconst url = `https://api.trello.com/1/members/${userName}/boards?key=${REACT_APP_API_KEY}&token=${token}`;\n\n\t\tconsole.log('url in dashboard: ', url);\n\t\t\n\t\tfetch(url)\n\t\t\t.then((response) => {\n\t\t\t\tif(response.status !== 200) {\n\t\t\t\t\tthrow Error('not success')\n\t\t\t\t}\n\t\t\t\treturn response.json();\n\t\t\t})\n\t\t\t.then((boards) => {\n\t\t\t\tconsole.log('Boards: ', boards);\n\t\t\t\tthis.setBoards(boards);\t\t\t\t\t\t\t\n\t\t\t})\n\t\t\t.catch(err => {\n\t\t\t\tconsole.log(err);\n\t\t\t})\n\t}\n\n\tprivate setBoards = (boards: any) => {\n\t\tthis.setState({\n\t\t\tboards: boards\n\t\t})\n\t}\n\n\t\n\trender() {\n\t\t//console.log('PROPS_in_DASH: ', this.props);\n\t\tconst { boards } = this.state;\n\t\t\t\t\n\t\tconst showBoards = boards.map((el:any, indx: number) => {\n\t\t\treturn (\n\t\t\t\t<li key={indx} className='board-item'>\n\t\t\t\t\t<a href='#' className='board-link'>\n\t\t\t\t\t\t<span className='board-title'>{el.name}</span>\n\t\t\t\t\t</a>\n\t\t\t\t</li>\n\t\t\t)\n\t\t})\n\n\t\treturn (\n\t\t\t<div className='Dashboard'>\n\t\t\t\t<h2>Hello from dashboard</h2>\n\t\t\t\t<hr/>\n\t\t\t\t<ul className='board-items'>\n\t\t\t\t\t{showBoards}\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t)\n\t}\n}","import * as React from 'react';\nimport { RouteChildrenProps } from 'react-router-dom';\nimport './UserProfile.scss';\n\n\nconst { REACT_APP_API_KEY } = process.env;\n\n\ninterface PropsUserProfile extends RouteChildrenProps {\n\ttoken?: string;\n\tuserName?: string;\n}\ninterface UserData {\n\tusername?: string;\n\tfullName?: string;\n\temail?: string;\n\tavatarUrl?: boolean;\n}\ninterface UserProfileState {\n\tuserData: Array<UserData>;\n}\n\n\nexport class UserProfile extends React.Component<PropsUserProfile> {\n\tstate = {\n\t\tuserData: {\n\t\t\tusername: '',\n\t\t\tfullName: '',\n\t\t\temail: '',\n\t\t\tavatarUrl: ''\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.getBoards();\n\t}\n\n\tprivate getBoards = () => {\n\t\tconsole.log('props from app to userProfile: ', this.props);\n\t\t\n\t\tconst { token, userName } = this.props;\n\t\tconst url = `https://api.trello.com/1/members/${userName}?key=${REACT_APP_API_KEY}&token=${token}`;\n\n\t\tconsole.log('url in UserProfile: ', url);\n\t\t\n\t\tfetch(url)\n\t\t\t.then((response) => {\n\t\t\t\tif(response.status !== 200) {\n\t\t\t\t\tthrow Error('not success')\n\t\t\t\t}\n\t\t\t\treturn response.json();\n\t\t\t})\n\t\t\t.then((userData) => {\n\t\t\t\tconsole.log('userData: ', userData);\n\t\t\t\tthis.setUserData(userData);\t\t\t\t\t\t\t\n\t\t\t})\n\t\t\t.catch(err => {\n\t\t\t\tconsole.log(err);\n\t\t\t})\n\t}\n\n\tprivate setUserData = (userData: any) => {\n\t\tconst newUserData = {\n\t\t\tusername: userData.username,\n\t\t\tfullName: userData.fullName,\n\t\t\temail: userData.email,\n\t\t\tavatarUrl: userData.avatarUrl\n\t\t}\n\n\t\tthis.setState({\n\t\t\tuserData: newUserData\n\t\t})\n\t}\n\t\n\n\trender() {\n\t\tconst {username, fullName, email, avatarUrl} = this.state.userData;\n\n\t\treturn (\n\t\t\t<div className='UserProfile'>\n\t\t\t\t<h2 className='profile-title'>User Profile</h2>\n\n\t\t\t\t<ul className='profile-items'>\n\t\t\t\t\t<li className='profile-item'>\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t<img className='profile-avatar' src={avatarUrl} alt=\"user avatar\"/>\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li className='profile-item'>\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t<strong>User name: </strong>{username}\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li className='profile-item'>\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t<strong>Full name: </strong>{fullName}\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li className='profile-item'>\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t<strong>Email: </strong>{email}\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</li>\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t)\n\t}\n}","import * as React from 'react';\nimport { RouteChildrenProps } from 'react-router-dom';\n\nexport const NotFound = (props: RouteChildrenProps) => {\n\treturn (\n\t\t<div>\n\t\t\t404 not found\n\t\t</div>\n\t)\n}","export const setToLocalStorage = <N> (key: string, data: N) => {\n\twindow.localStorage.setItem(key, JSON.stringify(data));\n};\n\nexport const getFromLocalStorage = <G> (key: string): G => {\n\treturn JSON.parse(window.localStorage.getItem(key) || '{}');\n};\n\n\n\n\n","import React, { FunctionComponent } from \"react\";\nimport { RouteChildrenProps } from \"react-router\";\nimport { Redirect } from \"react-router-dom\";\nimport { ROUTES_URLS } from '../App/routes';\n\n\ninterface PropsAuthorization extends RouteChildrenProps {\n\tonSetToken: (token: string) => void\n}\n\nexport const Authorization: FunctionComponent<PropsAuthorization> = (props: PropsAuthorization) => {\n\tconsole.log('PROPS from AUTH: ', props);\n\t\n\tconst {location:{hash}, onSetToken} = props;\n\tconst token = hash.split('=')[1];\n\t//const path = pathname.split('/')[1];\n\n\tonSetToken(token);\n\t\n\t\n\tconsole.log('HISTORY: ', window.location.pathname);\n\tconsole.log('DASHBOARD_URL: ', ROUTES_URLS.DASHBOARD);\n\n\treturn <Redirect to={ROUTES_URLS.DASHBOARD} />\n\n\t// if(pathname === ROUTES_URLS.DASHBOARD) {\n\t// \treturn <Redirect to={ROUTES_URLS.DASHBOARD} />\n\t// }\n\t//return <Redirect to={ROUTES_URLS.USER_PROFILE} />\n}","import React, { FunctionComponent } from 'react';\nimport { Route,\n\t\t\t\t Redirect,\n\t\t\t\t RouteProps,\n\t\t\t\t RouteComponentProps } from 'react-router-dom';\n\n\nexport interface ProtectedRouteProps extends RouteProps {\n\tisAuthenticated: boolean;\n}\n\nconst ProtectedRoute: FunctionComponent<ProtectedRouteProps> = ({ render, isAuthenticated, ...rest }) => {\t\n  return (\n\t\t<Route\t{...rest}\n\t\t\t\t\t\trender={( routeCompPrps: RouteComponentProps) =>\n\t\t\t\t\t\t\tisAuthenticated ? (\n\t\t\t\t\t\t\t\trender!(routeCompPrps)\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<Redirect\n\t\t\t\t\t\t\t\t\tto={{\n\t\t\t\t\t\t\t\t\t\tpathname: \"/login\",\n\t\t\t\t\t\t\t\t\t\tstate: { from: routeCompPrps.location }\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}\n    />\n  );\n}\n\nexport { ProtectedRoute }","import * as React from 'react';\nimport { Route,\n\t\t\t\t Link,\n\t\t\t\t Switch,\n\t\t\t\t Redirect,\n\t\t\t\t RouteChildrenProps,\n\t\t\t\t RouteComponentProps,\n\t\t\t\t withRouter } from 'react-router-dom';\nimport { routes,\n\t\t\t\t AppRoute,\n\t\t\t\t ROUTES_URLS } from './routes';\nimport { getFromLocalStorage, setToLocalStorage } from '../../utils';\nimport { Authorization } from '../Authorization';\nimport { ProtectedRoute } from '../ProtectedRoute';\nimport './App.scss';\n//import { Hello } from '../Hello';\n\n\nconst TOKEN_STORAGE_KEY = 'TOKEN';\nconst { REACT_APP_API_KEY } = process.env;\nconst INITIAL_STATE = {\n\ttoken: '',\n\tuserName: 'bullego1',\n\tuserProfile: undefined,\n\t//boards: [],\n}\n\n\n// interface Board {\n// \tid: string;\n// \tname: string;\n// \tdesc?: string;\n// \tpinned: boolean;\n// }\ninterface AppState {\n\ttoken: string;\n\tuserName: string;\n\tuserProfile: any;\n\t//boards: Array<Board>;\n}\ninterface AppProps extends RouteComponentProps {\n\n}\ninterface CustomToken {\n\ttoken: string;\n\tsomeValue?: number;\n}\n\n\nclass App extends React.Component<AppProps, AppState> {\n\tpublic state = INITIAL_STATE;\n\n\tcomponentDidMount() {\t\t\n\t\tthis.getToken();\n\t}\n\n\tprivate async getToken() {\n\t\tif(this.state.token) {\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tconst { token } = getFromLocalStorage<CustomToken>(TOKEN_STORAGE_KEY);\n\t\t\n\t\tif(!token) {\t\t\t\n\t\t\treturn this.goToLogin();\n\t\t}\n\t\t\n\t\tconst url = `https://api.trello.com/1/members/me?key=${REACT_APP_API_KEY}&token=${token}`;\n\t\tconst response = await fetch(url);\n\n\t\tif(response.ok === true && response.status === 200) {\n\t\t\tconst userProfile = await response.json();\n\n\t\t\tthis.setProfile(userProfile);\n\t\t\tthis.setToken(token);\n\n\t\t\t//return this.goToDashboard();\n\t\t\treturn this.goToUserProfile();\n\t\t}\n\n\t\treturn this.goToLogin();\n\t}\n\n\tprivate setProfile = (userProfile: any) => {\n\t\tthis.setState({\n\t\t\tuserProfile: userProfile\n\t\t})\n\t}\n\t\n\tprivate setToken = (token: any) => {\n\t\tthis.setState({\n\t\t\ttoken: token\n\t\t})\t\t\n\t\tsetToLocalStorage<CustomToken>(TOKEN_STORAGE_KEY, {token, someValue: 10});\n\t}\n\n\tprivate goToLogin() {\n\t\tthis.props.history.push(ROUTES_URLS.LOGIN);\n\t}\n\n\tprivate goToDashboard() {\n\t\tthis.props.history.push(ROUTES_URLS.DASHBOARD);\n\t}\n\n\tprivate goToUserProfile() {\n\t\tthis.props.history.push(ROUTES_URLS.USER_PROFILE);\n\t}\n\n\tprivate get isLoggedIn() {\n\t\treturn !!this.state.token;\n\t}\n\n\tprivate renderHeader() {\n\t\treturn (\n\t\t\t<header className='header'>\n\t\t\t\t{ routes.map((link: AppRoute, indx: number) => {\n\t\t\t\t\treturn link.isHidden ? null :\t<Link key={indx}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tto={link.path}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{link.title}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t\t<button onClick={this.logOut}>\n\t\t\t\t\t\tLog Out\n\t\t\t\t</button>\n\t\t\t</header>\n\t\t)\n\t}\n\n\tprivate logOut = () => {\n\t\tthis.setState(INITIAL_STATE);\n\t\tthis.goToLogin();\n\t}\n\n\tprivate renderContent() {\n\t\treturn (\n\t\t\t<main className='main'>\n\t\t\t\t<Switch>\n\t\t\t\t\t{routes.map(this.renderRoute)}\n\n\t\t\t\t\t<Route\tpath={ROUTES_URLS.AUTHORIZATION}\n\t\t\t\t\t\t\t\t\trender={(props: RouteChildrenProps) => { \n\t\t\t\t\t\t\t\t\t\treturn <Authorization {...props} onSetToken={this.setToken} />\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<Redirect to={ROUTES_URLS.NOT_FOUND} />\n\t\t\t\t</Switch>\n\t\t\t</main>\n\t\t)\n\t}\n\n\tprivate renderRoute = (route: AppRoute, indx: number) => {\n\t\tif(route.isProtected) {\n\t\t\treturn  <ProtectedRoute key={indx} \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpath={route.path}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\texact={route.exact}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t//render={route.render}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trender={(props) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('_____PROPS_____: ', props);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn route.render({...props,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t token: this.state.token,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t userName: this.state.userName})\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tisAuthenticated={this.isLoggedIn}\n\t\t\t \t\t\t\t/>\n\t\t}\n\t\telse {\n\t\t\treturn  <Route key={indx} \n\t\t\t\t\t\t\t\t\t\t path={route.path}\n\t\t\t\t\t\t\t\t\t\t exact={route.exact}\n\t\t\t\t\t\t\t\t\t\t render={(props) => {\n\t\t\t\t\t\t\t\t\t\t \treturn route.render({...props})\n\t\t\t\t\t\t\t\t\t\t }}\n\t\t\t\t\t\t\t/>\n\t\t}\n\t}\n\n\tpublic render() {\t\t\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t{ this.renderHeader() }\n\t\t\t\t{ this.renderContent() }\t\t\t\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nconst AppWithRouter = withRouter(App);\nexport { AppWithRouter as App };\n\n\n// \"homepage\": \"https://bullego.github.io/web-academy_OAuth/\",\n// \"predeploy\": \"npm run build\",\n// \"deploy\": \"gh-pages -d build\",","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { App } from './components/App';\nimport { BrowserRouter } from 'react-router-dom';\n\nconst application = \n\t<BrowserRouter>\n\t\t<App />\n\t</BrowserRouter>\n\nReactDOM.render(application, document.querySelector('#root'));"],"sourceRoot":""}