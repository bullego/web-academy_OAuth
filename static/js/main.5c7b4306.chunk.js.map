{"version":3,"sources":["components/App/routes.tsx","components/Login/Login.tsx","components/Dashboard/Dashboard.tsx","components/NotFound/NotFound.tsx","components/Hello/Hello.tsx","utils/localstorage.ts","components/Authorization/Authorization.tsx","components/ProtectedRoute/ProtectedRoute.tsx","components/App/App.tsx","index.tsx"],"names":["ROUTES_URLS","process","REACT_APP_API_KEY","REACT_APP_NAME","REACT_APP_SCOPE","REACT_APP_REDIRECT_URL","Login","requestUrl","className","href","React","Dashboard","state","boards","getBoards","console","log","props","token","userName","url","fetch","then","response","status","Error","json","setBoards","catch","err","setState","this","showBoards","map","el","indx","key","name","NotFound","Hello","showText","setText","Component","routes","path","LOGIN","exact","title","render","DASHBOARD","isProtected","HOME","isHidden","to","NOT_FOUND","HELLO","setToLocalStorage","data","window","localStorage","setItem","JSON","stringify","Authorization","hash","location","onSetToken","split","ProtectedRoute","isAuthenticated","rest","routeCompPrps","pathname","from","INITIAL_STATE","userProfile","undefined","someText","App","setProfile","setToken","someValue","logOut","goToLogin","renderRoute","route","isLoggedIn","someFunc","getToken","parse","getItem","ok","goToDashboard","history","push","link","onClick","AUTHORIZATION","renderHeader","renderContent","AppWithRouter","withRouter","application","ReactDOM","document","querySelector"],"mappings":"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","file":"static/js/main.5c7b4306.chunk.js","sourcesContent":["import * as React from 'react';\nimport { Redirect, RouteChildrenProps } from 'react-router-dom';\nimport { Login } from '../Login';\nimport { Dashboard } from '../Dashboard';\nimport { NotFound } from '../NotFound';\nimport { Hello } from '../Hello';\n\n\nexport enum ROUTES_URLS {\n\tHOME = '/',\n\tHELLO = '/hello',\n\tLOGIN = '/login',\n\tDASHBOARD = '/dashboard',\n\tAUTHORIZATION = '/authorization',\n\tNOT_FOUND = '/404',\n}\n\nexport interface AppRoute {\n\tpath: ROUTES_URLS,\n\texact?: boolean,\n\trender: (props: any) => any,\n\ttitle?: string,\n\tisHidden?: boolean,\n\tisProtected?: boolean\n}\n\n\nexport const routes: Array<AppRoute> = [\n\t{\n\t\tpath: ROUTES_URLS.LOGIN,\n\t\texact: true,\n\t\ttitle: 'Go to Home/Login',\n\t\trender: (props: any) => <Login {...props}/>\n\t},\n\t{\n\t\tpath: ROUTES_URLS.DASHBOARD,\n\t\texact: false,\n\t\ttitle: 'Go to Dashboard',\n\t\tisProtected: true,\n\t\trender: (props: RouteChildrenProps) => <Dashboard {...props} />\n\t},\n\t{\n\t\tpath: ROUTES_URLS.HOME,\n\t\texact: true,\n\t\tisHidden: true,\n\t\trender: () => <Redirect to={ROUTES_URLS.LOGIN}/>\n\t},\n\t{\n\t\tpath: ROUTES_URLS.NOT_FOUND,\n\t\tisHidden: true,\n\t\trender: (props: RouteChildrenProps) => <NotFound {...props}/>\n\t},\n\t{\n\t\tpath: ROUTES_URLS.HELLO,\n\t\texact: true,\n\t\tisHidden: true,\n\t\trender: (props: any) => <Hello {...props}/>\n\t}\n]","import * as React from 'react';\nimport './Login.scss';\n\nconst { REACT_APP_API_KEY, REACT_APP_NAME, REACT_APP_SCOPE, REACT_APP_REDIRECT_URL } = process.env;\n\nexport class Login extends React.Component {\n\trender() {\n\t\tconst requestUrl = `https://trello.com/1/authorize?return_url=${REACT_APP_REDIRECT_URL}&expiration=1day&name=${REACT_APP_NAME}&scope=${REACT_APP_SCOPE}&response_type=token&key=${REACT_APP_API_KEY}`;\n\n\t\treturn(\n\t\t\t<div className='Login'>\n\t\t\t\t<a href={requestUrl}>Login with Trello account</a>\n\t\t\t\t<h2>Please log in</h2>\n\t\t\t</div>\n\t\t)\n\t}\n}","import * as React from 'react';\nimport { RouteChildrenProps } from 'react-router';\nimport './Dashboard.scss';\n\n\nconst { REACT_APP_API_KEY } = process.env;\n\n\ninterface PropsDashboard extends RouteChildrenProps {\n\ttoken?: string;\n\tuserName?: string;\n}\ninterface Board {\n\tid: string;\n\tname: string;\n\tdesc?: string;\n\tpinned?: boolean;\n}\ninterface DashState {\n\tboards: Array<Board>;\n}\n\nexport class Dashboard extends React.Component<PropsDashboard, DashState> {\n\tstate = {\n\t\tboards: []\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.getBoards();\n\t}\n\n\tprivate getBoards = () => {\n\t\tconsole.log('props from app to dash: ', this.props);\n\t\t\n\t\tconst { token, userName } = this.props;\n\t\tconst url = `https://api.trello.com/1/members/${userName}/boards?key=${REACT_APP_API_KEY}&token=${token}`;\n\n\t\tconsole.log('url FROM APP: ', url);\n\t\t\n\t\tfetch(url)\n\t\t\t.then((response) => {\n\t\t\t\tif(response.status !== 200) {\n\t\t\t\t\tthrow Error('not success')\n\t\t\t\t}\n\t\t\t\treturn response.json();\n\t\t\t})\n\t\t\t.then((boards) => {\n\t\t\t\tconsole.log('Boards: ', boards);\n\t\t\t\tthis.setBoards(boards);\t\t\t\t\t\t\t\n\t\t\t})\n\t\t\t.catch(err => {\n\t\t\t\tconsole.log(err);\n\t\t\t})\n\t}\n\n\tprivate setBoards = (boards: any) => {\n\t\tthis.setState({\n\t\t\tboards: boards\n\t\t})\n\t}\n\n\t\n\trender() {\n\t\tconsole.log('PROPS_in_DASH: ', this.props);\n\n\t\tconst { boards } = this.state;\n\n\t\tconsole.log('BoArDs____: ', boards);\n\t\t\n\t\t\t\t\n\t\tconst showBoards = boards.map((el:any, indx: number) => {\n\t\t\treturn (\n\t\t\t\t<li key={indx} className='board-item'>\n\t\t\t\t\t<a href='#' className='board-link'>\n\t\t\t\t\t\t<span className='board-title'>{el.name}</span>\n\t\t\t\t\t</a>\n\t\t\t\t</li>\n\t\t\t)\n\t\t})\n\n\t\treturn (\n\t\t\t<div className='Dashboard'>\n\t\t\t\t<h2>Hello from dashboard</h2>\n\t\t\t\t<hr/>\n\t\t\t\t<ul className='board-items'>\n\t\t\t\t\t{showBoards}\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t)\n\t}\n}","import * as React from 'react';\nimport { RouteChildrenProps } from 'react-router-dom';\n\nexport const NotFound = (props: RouteChildrenProps) => {\n\treturn (\n\t\t<div>\n\t\t\t404 not found\n\t\t</div>\n\t)\n}","import React from 'react';\nimport { RouteChildrenProps } from 'react-router-dom';\n\n\ninterface PropsHello extends RouteChildrenProps {\n\tsetText?: string;\n\tboards?: any;\n}\n\n\nexport class Hello extends React.Component<PropsHello> {\t\n\trender() {\n\t\t//console.log('APP_PROPS_FROM_HELLO: ', this.props);\n\n\t\tconst { setText: showText } = this.props;\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<h1>Hello World</h1>\n\t\t\t\t<p>{showText}</p>\n\t\t\t</div>\n\t\t)\n\t}\n}","export const setToLocalStorage = <N> (key: string, data: N) => {\n\twindow.localStorage.setItem(key, JSON.stringify(data));\n};\n\nexport const getFromLocalStorage = <G> (key: string): G => {\n\treturn JSON.parse(window.localStorage.getItem(key) || '{}');\n};\n\n\n\n\n","import React, { FunctionComponent } from \"react\";\nimport { RouteChildrenProps } from \"react-router\";\nimport { Redirect } from \"react-router-dom\";\nimport { ROUTES_URLS } from '../App/routes';\n\n\ninterface PropsAuthorization extends RouteChildrenProps {\n\tonSetToken: (token: string) => void\n}\n\nexport const Authorization: FunctionComponent<PropsAuthorization> = (props: PropsAuthorization) => {\n\tconsole.log('PROPS from AUTH: ', props);\n\t\n\tconst {location:{hash}, onSetToken} = props;\n\tconst token = hash.split('=')[1];\n\n\tonSetToken(token);\n\n\treturn <Redirect to={ROUTES_URLS.DASHBOARD} />\n}","import React, { FunctionComponent } from 'react';\nimport { Route,\n\t\t\t\t Redirect,\n\t\t\t\t RouteProps,\n\t\t\t\t RouteComponentProps } from 'react-router-dom';\n\n\nexport interface ProtectedRouteProps extends RouteProps {\n\tisAuthenticated: boolean;\n}\n\nconst ProtectedRoute: FunctionComponent<ProtectedRouteProps> = ({ render, isAuthenticated, ...rest }) => {\t\n  return (\n\t\t<Route\t{...rest}\n\t\t\t\t\t\trender={( routeCompPrps: RouteComponentProps) =>\n\t\t\t\t\t\t\tisAuthenticated ? (\n\t\t\t\t\t\t\t\trender!(routeCompPrps)\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<Redirect\n\t\t\t\t\t\t\t\t\tto={{\n\t\t\t\t\t\t\t\t\t\tpathname: \"/login\",\n\t\t\t\t\t\t\t\t\t\tstate: { from: routeCompPrps.location }\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}\n    />\n  );\n}\n\nexport { ProtectedRoute }","import * as React from 'react';\nimport { Route,\n\t\t\t\t Link,\n\t\t\t\t Switch,\n\t\t\t\t Redirect,\n\t\t\t\t RouteChildrenProps,\n\t\t\t\t RouteComponentProps,\n\t\t\t\t withRouter } from 'react-router-dom';\nimport { routes,\n\t\t\t\t AppRoute,\n\t\t\t\t ROUTES_URLS } from './routes';\nimport { getFromLocalStorage, setToLocalStorage } from '../../utils';\nimport { Authorization } from '../Authorization';\nimport { ProtectedRoute } from '../ProtectedRoute';\nimport './App.scss';\nimport { Hello } from '../Hello';\n\n\nconst TOKEN_STORAGE_KEY = 'TOKEN';\nconst { REACT_APP_API_KEY } = process.env;\nconst INITIAL_STATE = {\n\ttoken: '',\n\tuserName: 'bullego1',\n\tuserProfile: undefined,\n\tsomeText: 'test_test_test',\n\t//boards: [],\n}\n\n\n// interface Board {\n// \tid: string;\n// \tname: string;\n// \tdesc?: string;\n// \tpinned: boolean;\n// }\ninterface AppState {\n\ttoken: string;\n\tuserName: string;\n\tuserProfile: any;\n\t//boards: Array<Board>;\n}\ninterface AppProps extends RouteComponentProps {\n\n}\ninterface CustomToken {\n\ttoken: string;\n\tsomeValue?: number;\n}\n\n\nclass App extends React.Component<AppProps, AppState> {\n\tpublic state = INITIAL_STATE;\n\n\tcomponentDidMount() {\t\t\n\t\tthis.getToken();\n\t}\n\n\tprivate async getToken() {\n\t\tif(this.state.token) {\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tconst { token } = getFromLocalStorage<CustomToken>(TOKEN_STORAGE_KEY);\n\t\t\n\t\tif(!token) {\t\t\t\n\t\t\treturn this.goToLogin();\n\t\t}\n\t\t\n\t\tconst url = `https://api.trello.com/1/members/me?key=${REACT_APP_API_KEY}&token=${token}`;\n\t\tconst response = await fetch(url);\n\n\t\tif(response.ok === true && response.status === 200) {\n\t\t\tconst userProfile = await response.json();\n\n\t\t\tthis.setProfile(userProfile);\n\t\t\tthis.setToken(token);\n\n\t\t\treturn this.goToDashboard();\n\t\t}\n\n\t\treturn this.goToLogin();\n\t}\n\n\tprivate setProfile = (userProfile: any) => {\n\t\tthis.setState({\n\t\t\tuserProfile: userProfile\n\t\t})\n\t}\n\t\n\tprivate setToken = (token: any) => {\n\t\tthis.setState({\n\t\t\ttoken: token\n\t\t})\t\t\n\t\tsetToLocalStorage<CustomToken>(TOKEN_STORAGE_KEY, {token, someValue: 10});\n\t}\n\n\tprivate goToLogin() {\n\t\tthis.props.history.push(ROUTES_URLS.LOGIN);\n\t}\n\n\tprivate goToDashboard() {\n\t\tthis.props.history.push(ROUTES_URLS.DASHBOARD);\n\t}\n\n\tprivate get isLoggedIn() {\n\t\treturn !!this.state.token;\n\t}\n\n\tprivate renderHeader() {\n\t\treturn (\n\t\t\t<header className='header'>\n\t\t\t\t{ routes.map((link: AppRoute, indx: number) => {\n\t\t\t\t\treturn link.isHidden ? null :\t<Link key={indx}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tto={link.path}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{link.title}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t\t<button onClick={this.logOut}>\n\t\t\t\t\t\tLog Out\n\t\t\t\t</button>\n\t\t\t</header>\n\t\t)\n\t}\n\n\tprivate logOut = () => {\n\t\tthis.setState(INITIAL_STATE);\n\t\tthis.goToLogin();\n\t}\n\n\tprivate renderContent() {\n\t\treturn (\n\t\t\t<main className='main'>\n\t\t\t\t<Switch>\n\t\t\t\t\t{routes.map(this.renderRoute)}\n\n\t\t\t\t\t<Route\tpath={ROUTES_URLS.AUTHORIZATION}\n\t\t\t\t\t\t\t\t\trender={(props: RouteChildrenProps) => { \n\t\t\t\t\t\t\t\t\t\treturn <Authorization {...props} onSetToken={this.setToken} />\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<Redirect to={ROUTES_URLS.NOT_FOUND} />\n\t\t\t\t</Switch>\n\n\t\t\t\t<Route  path={ROUTES_URLS.HOME}\n\t\t\t\t\t\t\t\trender={(props: RouteChildrenProps) => {\n\t\t\t\t\t\t\t\t\treturn <Hello {...props} setText={this.someFunc()} />\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t</main>\n\t\t)\n\t}\n\n\tprivate renderRoute = (route: AppRoute, indx: number) => {\n\t\tif(route.isProtected) {\n\t\t\treturn  <ProtectedRoute key={indx} \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpath={route.path}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\texact={route.exact}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t//render={route.render}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trender={(props) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('_____PROPS_____: ', props);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn route.render({...props,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t token: this.state.token,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t userName: this.state.userName})\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tisAuthenticated={this.isLoggedIn}\n\t\t\t \t\t\t\t/>\n\t\t}\n\t\telse {\n\t\t\treturn  <Route key={indx} \n\t\t\t\t\t\t\t\t\t\t path={route.path}\n\t\t\t\t\t\t\t\t\t\t exact={route.exact}\n\t\t\t\t\t\t\t\t\t\t render={(props) => {\n\t\t\t\t\t\t\t\t\t\t \treturn route.render({...props})\n\t\t\t\t\t\t\t\t\t\t }}\n\t\t\t\t\t\t\t/>\n\t\t}\n\t}\n\n\tprivate someFunc = () => {\n\t\treturn this.state.someText\n\t}\n\n\tpublic render() {\t\t\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t{ this.renderHeader() }\n\t\t\t\t{ this.renderContent() }\t\t\t\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nconst AppWithRouter = withRouter(App);\nexport { AppWithRouter as App };\n\n\n// \"homepage\": \"https://bullego.github.io/web-academy_OAuth/\",\n// \"predeploy\": \"npm run build\",\n// \"deploy\": \"gh-pages -d build\",\n\n\n\n/*\nХраним токен в Арр в стейте и передаем его через пропсы в компонент Дашборд\n\nсоздать страницу-компонент (отдельный роут) Юзерпрофайл и хранить в стейте Юзерпрофайл все запрашиваемые данные в ней, напр. обьект Юзердата и внутри Имя, фамилия, мейл, аватар и т.д. \nВ главном компоненте Арр в стейте храним только токен\n\nПотом это же можно порторить на Редаксе, после проверки задания\n\n\n*/","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { App } from './components/App';\nimport { BrowserRouter } from 'react-router-dom';\n\nconst application = \n\t<BrowserRouter>\n\t\t<App />\n\t</BrowserRouter>\n\nReactDOM.render(application, document.querySelector('#root'));"],"sourceRoot":""}