{"version":3,"sources":["components/App/routes.tsx","components/Login/Login.tsx","utils/localstorage.ts","components/Dashboard/Dashboard.tsx","components/NotFound/NotFound.tsx","components/Authorization/Authorization.tsx","components/ProtectedRoute/ProtectedRoute.tsx","components/App/App.tsx","index.tsx"],"names":["ROUTES_URLS","process","REACT_APP_API_KEY","REACT_APP_NAME","REACT_APP_SCOPE","REACT_APP_REDIRECT_URL","Login","requestUrl","className","href","React","setToLocalStorage","key","data","window","localStorage","setItem","JSON","stringify","getFromLocalStorage","parse","getItem","token","Dashboard","state","boards","setBoards","setState","this","getToken","url","fetch","then","response","status","Error","json","catch","err","console","log","showBoardsTitle","map","el","indx","name","NotFound","props","routes","path","LOGIN","exact","title","render","DASHBOARD","isProtected","HOME","isHidden","to","NOT_FOUND","Authorization","hash","location","onSetToken","split","ProtectedRoute","isAuthenticated","rest","routeCompPrps","pathname","from","INITIAL_STATE","userProfile","undefined","App","setProfile","setToken","logOut","goToLogin","renderRoute","route","isLoggedIn","ok","goToDashboard","history","push","link","onClick","AUTHORIZATION","renderHeader","renderContent","AppWithRouter","withRouter","application","ReactDOM","document","querySelector"],"mappings":"+MAOYA,E,8GCJ2EC,kUAA/EC,E,EAAAA,kBAAmBC,E,EAAAA,eAAgBC,E,EAAAA,gBAAiBC,E,EAAAA,uBAE/CC,EAAb,uKAEE,IAAMC,EAAU,oDAAgDF,EAAhD,iCAA+FF,EAA/F,kBAAuHC,EAAvH,oCAAkKF,GAElL,OACC,uBAAKM,UAAU,SACd,qBAAGC,KAAMF,GAAT,6BACA,iDAPJ,GAA2BG,aCLdC,EAAoB,SAAKC,EAAaC,GAClDC,OAAOC,aAAaC,QAAQJ,EAAKK,KAAKC,UAAUL,KAGpCM,EAAsB,SAAKP,GACvC,OAAOK,KAAKG,MAAMN,OAAOC,aAAaM,QAAQT,IAAQ,MAAMU,OCOhDC,G,MAAb,4MACCC,MAAQ,CACPC,OAAQ,IAFV,EA8BSC,UAAY,SAACD,GACpB,EAAKE,SAAS,CACbF,OAAQA,KAhCX,yDAOE,OADcN,EAZU,WAM1B,0CAUsB,IAAD,OAEbG,EAAQM,KAAKC,WACbC,EAAG,2CAFE,2BAEF,uBApBmB7B,mCAoBnB,kBAAmFqB,GAE5FS,MAAMD,GACJE,MAAK,SAACC,GACN,GAAuB,MAApBA,EAASC,OACX,MAAMC,MAAM,eAEb,OAAOF,EAASG,UAEhBJ,MAAK,SAACP,GACN,EAAKC,UAAUD,MAEfY,OAAM,SAAAC,GACNC,QAAQC,IAAIF,QA1BhB,+BAqCW,IAEHG,EADab,KAAKJ,MAAhBC,OACuBiB,KAAI,SAACC,EAAQC,GAC3C,OACC,sBAAIhC,IAAKgC,EAAMpC,UAAU,cACxB,qBAAGC,KAAK,IAAID,UAAU,cACrB,wBAAMA,UAAU,eAAemC,EAAGE,WAMtC,OACC,uBAAKrC,UAAU,aACd,kDACA,2BACA,sBAAIA,UAAU,eACZiC,QAtDN,GAA+B/B,cCTlBoC,EAAW,SAACC,GACxB,OACC,8C,SJEU/C,K,SAAAA,E,eAAAA,E,uBAAAA,E,+BAAAA,E,kBAAAA,M,KAkBL,IAAMgD,EAA0B,CACtC,CACCC,KAAMjD,EAAYkD,MAClBC,OAAO,EACPC,MAAO,mBACPC,OAAQ,SAACN,GAAD,OAAgB,gBAAC,EAAUA,KAEpC,CACCE,KAAMjD,EAAYsD,UAClBH,OAAO,EACPC,MAAO,kBACPG,aAAa,EACbF,OAAQ,SAACN,GAAD,OAA+B,gBAAC,EAAcA,KAEvD,CACCE,KAAMjD,EAAYwD,KAClBL,OAAO,EACPM,UAAU,EACVJ,OAAQ,kBAAM,gBAAC,IAAD,CAAUK,GAAI1D,EAAYkD,UAEzC,CACCD,KAAMjD,EAAY2D,UAClBF,UAAU,EACVJ,OAAQ,SAACN,GAAD,OAA+B,gBAAC,EAAaA,MKtC1Ca,EAAuD,SAACb,GAA+B,IAClFc,EAAqBd,EAA/Be,SAAUD,KAKjB,OAFAE,EAHsChB,EAAdgB,YACVF,EAAKG,MAAM,KAAK,IAIvB,kBAAC,IAAD,CAAUN,GAAI1D,EAAYsD,a,QCL5BW,EAAyD,SAAC,GAA0C,IAAxCZ,EAAuC,EAAvCA,OAAQa,EAA+B,EAA/BA,gBAAoBC,EAAW,4CACvG,OACE,kBAAC,IAAD,iBAAWA,EAAX,CACEd,OAAQ,SAAEe,GAAF,OACPF,EACCb,EAAQe,GAER,kBAAC,IAAD,CACCV,GAAI,CACHW,SAAU,SACV7C,MAAO,CAAE8C,KAAMF,EAAcN,mBCFjCS,G,MAAgB,CACrBjD,MAAO,GACPG,OAAQ,GACR+C,iBAAaC,IAwBRC,E,4MACElD,MAAQ+C,E,EAgCPI,WAAa,SAACH,GACrB,EAAK7C,SAAS,CACb6C,YAAaA,K,EAIPI,SAAW,SAACtD,GACnB,EAAKK,SAAS,CACbL,MAAOA,IAERX,EAxEwB,QAwE0B,CAACW,W,EAgC5CuD,OAAS,WAChB,EAAKlD,SAAS4C,GACd,EAAKO,a,EAoBEC,YAAc,SAACC,EAAiBpC,GACvC,OAAGoC,EAAMzB,YACA,gBAAC,EAAD,CAAgB3C,IAAKgC,EACjBK,KAAM+B,EAAM/B,KACZE,MAAO6B,EAAM7B,MACbE,OAAQ2B,EAAM3B,OACda,gBAAiB,EAAKe,aAI1B,gBAAC,IAAD,CAAOrE,IAAKgC,EACZK,KAAM+B,EAAM/B,KACZE,MAAO6B,EAAM7B,MACbE,OAAQ,SAACN,GACR,OAAOiC,EAAM3B,OAAN,eAAiBN,Q,kEA3GlCnB,KAAKC,a,2JAIFD,KAAKJ,MAAMF,M,oDAIRA,EAAQH,EAzCU,S,yCA4ChBS,KAAKkD,a,cAGPhD,E,kDA9CsB7B,mC,kBA8CsDqB,G,SAC3DS,MAAMD,G,WAEV,KAFbG,E,QAEMiD,IAAmC,MAApBjD,EAASC,O,kCACTD,EAASG,O,eAA7BoC,E,OAEN5C,KAAK+C,WAAWH,GAChB5C,KAAKgD,SAAStD,G,kBAEPM,KAAKuD,iB,iCAGNvD,KAAKkD,a,yIAiBZlD,KAAKmB,MAAMqC,QAAQC,KAAKrF,EAAYkD,S,sCAIpCtB,KAAKmB,MAAMqC,QAAQC,KAAKrF,EAAYsD,a,qCAQpC,OACC,0BAAQ9C,UAAU,UACfwC,EAAON,KAAI,SAAC4C,EAAgB1C,GAC7B,OAAO0C,EAAK7B,SAAW,KAAO,gBAAC,IAAD,CAAM7C,IAAKgC,EACvBc,GAAI4B,EAAKrC,MACVqC,EAAKlC,UAIvB,0BAAQmC,QAAS3D,KAAKiD,QAAtB,c,sCAYsB,IAAD,OACvB,OACC,wBAAMrE,UAAU,QACf,gBAAC,IAAD,KACEwC,EAAON,IAAId,KAAKmD,aAEjB,gBAAC,IAAD,CAAO9B,KAAMjD,EAAYwF,cACrBnC,OAAQ,SAACN,GACR,OAAO,gBAAC,EAAD,iBAAmBA,EAAnB,CAA0BgB,WAAY,EAAKa,eAGvD,gBAAC,IAAD,CAAUlB,GAAI1D,EAAY2D,iB,+BA2B7B,OACC,2BACG/B,KAAK6D,eACL7D,KAAK8D,mB,iCAlET,QAAS9D,KAAKJ,MAAMF,U,GAvDJZ,aA+HZiF,EAAgBC,YAAWlB,GCxK3BmB,EACL,gBAAC,IAAD,KACC,gBAAC,EAAD,OAGFC,SAAgBD,EAAaE,SAASC,cAAc,Y","file":"static/js/main.cbca2b40.chunk.js","sourcesContent":["import * as React from 'react';\nimport { Redirect, RouteChildrenProps } from 'react-router-dom';\nimport { Login } from '../Login';\nimport { Dashboard } from '../Dashboard';\nimport { NotFound } from '../NotFound';\n\n\nexport enum ROUTES_URLS {\n\tHOME = '/',\n\tLOGIN = '/login',\n\tDASHBOARD = '/dashboard',\n\tAUTHORIZATION = '/authorization',\n\tNOT_FOUND = '/404',\n}\n\nexport interface AppRoute {\n\tpath: ROUTES_URLS,\n\texact?: boolean,\n\trender: (props: any) => any,\n\ttitle?: string,\n\tisHidden?: boolean,\n\tisProtected?: boolean\n}\n\n\nexport const routes: Array<AppRoute> = [\n\t{\n\t\tpath: ROUTES_URLS.LOGIN,\n\t\texact: true,\n\t\ttitle: 'Go to Home/Login',\n\t\trender: (props: any) => <Login {...props}/>\n\t},\n\t{\n\t\tpath: ROUTES_URLS.DASHBOARD,\n\t\texact: false,\n\t\ttitle: 'Go to Dashboard',\n\t\tisProtected: true,\n\t\trender: (props: RouteChildrenProps) => <Dashboard {...props}/>\n\t},\n\t{\n\t\tpath: ROUTES_URLS.HOME,\n\t\texact: true,\n\t\tisHidden: true,\n\t\trender: () => <Redirect to={ROUTES_URLS.LOGIN}/>\n\t},\n\t{\n\t\tpath: ROUTES_URLS.NOT_FOUND,\n\t\tisHidden: true,\n\t\trender: (props: RouteChildrenProps) => <NotFound {...props}/>\n\t}\n]","import * as React from 'react';\nimport './Login.scss';\n\nconst { REACT_APP_API_KEY, REACT_APP_NAME, REACT_APP_SCOPE, REACT_APP_REDIRECT_URL } = process.env;\n\nexport class Login extends React.Component {\n\trender() {\n\t\tconst requestUrl = `https://trello.com/1/authorize?return_url=${REACT_APP_REDIRECT_URL}&expiration=1day&name=${REACT_APP_NAME}&scope=${REACT_APP_SCOPE}&response_type=token&key=${REACT_APP_API_KEY}`;\n\n\t\treturn(\n\t\t\t<div className='Login'>\n\t\t\t\t<a href={requestUrl}>Login with Trello account</a>\n\t\t\t\t<h2>Please log in</h2>\n\t\t\t</div>\n\t\t)\n\t}\n}","export const setToLocalStorage = <N> (key: string, data: N) => {\n\twindow.localStorage.setItem(key, JSON.stringify(data));\n};\n\nexport const getFromLocalStorage = <G> (key: string): G => {\n\treturn JSON.parse(window.localStorage.getItem(key) || '{}').token;\n};","import * as React from 'react';\nimport { RouteChildrenProps } from 'react-router';\nimport { getFromLocalStorage } from '../../utils';\nimport './Dashboard.scss';\n\nconst { REACT_APP_API_KEY } = process.env;\nconst TOKEN_STORAGE_KEY = 'TOKEN';\n\ninterface PropsDashboard extends RouteChildrenProps {\n\ttoken?: string;\n}\n\nexport class Dashboard extends React.Component<PropsDashboard> {\n\tstate = {\n\t\tboards: []\n\t}\n\n\tprivate getToken() {\n\t\tconst token = getFromLocalStorage(TOKEN_STORAGE_KEY);\n\t\treturn token;\n\t}\n\t\n\tcomponentDidMount() {\t\n\t\tconst id = '5efc78dc483c927431aef6e5';\n\t\tconst token = this.getToken();\n\t\tconst url = `https://api.trello.com/1/members/${id}/boards?key=${REACT_APP_API_KEY}&token=${token}`;\t\t\n\n\t\tfetch(url)\n\t\t\t.then((response) => {\n\t\t\t\tif(response.status !== 200) {\n\t\t\t\t\tthrow Error('not success')\n\t\t\t\t}\n\t\t\t\treturn response.json();\n\t\t\t})\n\t\t\t.then((boards) => {\t\t\t\t\n\t\t\t\tthis.setBoards(boards);\t\t\t\t\t\t\t\n\t\t\t})\n\t\t\t.catch(err => {\n\t\t\t\tconsole.log(err);\n\t\t\t})\t\t\n\t}\n\n\tprivate setBoards = (boards: any) => {\n\t\tthis.setState({\n\t\t\tboards: boards\n\t\t})\n\t}\n\n\t\n\trender() {\n\t\tconst { boards } = this.state;\t\t\n\t\tconst showBoardsTitle = boards.map((el:any, indx: number) => {\n\t\t\treturn (\n\t\t\t\t<li key={indx} className='board-item'>\n\t\t\t\t\t<a href='#' className='board-link'>\n\t\t\t\t\t\t<span className='board-title'>{el.name}</span>\n\t\t\t\t\t</a>\n\t\t\t\t</li>\n\t\t\t)\n\t\t})\n\n\t\treturn (\n\t\t\t<div className='Dashboard'>\n\t\t\t\t<h2>Hello from dashboard</h2>\n\t\t\t\t<hr/>\n\t\t\t\t<ul className='board-items'>\n\t\t\t\t\t{showBoardsTitle}\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t)\n\t}\n}","import * as React from 'react';\nimport { RouteChildrenProps } from 'react-router-dom';\n\nexport const NotFound = (props: RouteChildrenProps) => {\n\treturn (\n\t\t<div>\n\t\t\t404 not found\n\t\t</div>\n\t)\n}","import React, { FunctionComponent } from \"react\";\nimport { RouteChildrenProps } from \"react-router\";\nimport { Redirect } from \"react-router-dom\";\nimport { ROUTES_URLS } from '../App/routes';\n\n\ninterface PropsAuthorization extends RouteChildrenProps {\n\tonSetToken: (token: string) => void\n}\n\nexport const Authorization: FunctionComponent<PropsAuthorization> = (props: PropsAuthorization) => {\n\tconst {location:{hash}, onSetToken} = props;\n\tconst token = hash.split('=')[1];\n\n\tonSetToken(token);\n\n\treturn <Redirect to={ROUTES_URLS.DASHBOARD} />\n}","import React, { FunctionComponent } from 'react';\nimport { Route,\n\t\t\t\t Redirect,\n\t\t\t\t RouteProps,\n\t\t\t\t RouteComponentProps } from 'react-router-dom';\n\n\ninterface ProtectedRouteProps extends RouteProps {\n\tisAuthenticated: boolean;\n}\n\nconst ProtectedRoute: FunctionComponent<ProtectedRouteProps> = ({ render, isAuthenticated, ...rest }) => {\n  return (\n    <Route\t{...rest}\n\t\t\t\t\t\trender={( routeCompPrps: RouteComponentProps ) =>\n\t\t\t\t\t\t\tisAuthenticated ? (\n\t\t\t\t\t\t\t\trender!(routeCompPrps)\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<Redirect\n\t\t\t\t\t\t\t\t\tto={{\n\t\t\t\t\t\t\t\t\t\tpathname: \"/login\",\n\t\t\t\t\t\t\t\t\t\tstate: { from: routeCompPrps.location }\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}\n    />\n  );\n}\n\nexport { ProtectedRoute }","import * as React from 'react';\nimport { Route,\n\t\t\t\t Link,\n\t\t\t\t Switch,\n\t\t\t\t Redirect,\n\t\t\t\t RouteChildrenProps,\n\t\t\t\t RouteComponentProps,\n\t\t\t\t withRouter } from 'react-router-dom';\nimport { routes,\n\t\t\t\t AppRoute,\n\t\t\t\t ROUTES_URLS } from './routes';\nimport { getFromLocalStorage, setToLocalStorage } from '../../utils';\nimport { Authorization } from '../Authorization';\nimport { ProtectedRoute } from '../ProtectedRoute';\nimport './App.scss';\n\n\nconst TOKEN_STORAGE_KEY = 'TOKEN';\nconst { REACT_APP_API_KEY } = process.env;\nconst INITIAL_STATE = {\n\ttoken: '',\n\tboards: [],\n\tuserProfile: undefined\n}\n\n\ninterface Board {\n\tid: string;\n\tname: string;\n\tdesc?: string;\n\tpinned: boolean;\n}\ninterface AppState {\n\ttoken: string;\n\tboards: Array<Board>;\n\tuserProfile: any;\n}\ninterface AppProps extends RouteComponentProps {\n\n}\ninterface CustomToken {\n\ttoken: string;\n\tsomeValue?: number;\n}\n\n\nclass App extends React.Component<AppProps, AppState> {\n\tpublic state = INITIAL_STATE;\n\n\tcomponentDidMount() {\t\t\n\t\tthis.getToken();\n\t}\n\n\tprivate async getToken() {\n\t\tif(this.state.token) {\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tconst token = getFromLocalStorage<CustomToken>(TOKEN_STORAGE_KEY);\n\t\t\n\t\tif(!token) {\t\t\t\n\t\t\treturn this.goToLogin();\n\t\t}\n\t\t\n\t\tconst url = `https://api.trello.com/1/members/me?key=${REACT_APP_API_KEY}&token=${token}`;\n\t\tconst response = await fetch(url);\n\n\t\tif(response.ok === true && response.status === 200) {\n\t\t\tconst userProfile = await response.json();\n\n\t\t\tthis.setProfile(userProfile);\n\t\t\tthis.setToken(token);\n\n\t\t\treturn this.goToDashboard();\n\t\t}\n\n\t\treturn this.goToLogin();\n\t}\n\n\tprivate setProfile = (userProfile: any) => {\n\t\tthis.setState({\n\t\t\tuserProfile: userProfile\n\t\t})\n\t}\n\t\n\tprivate setToken = (token: any) => {\n\t\tthis.setState({\n\t\t\ttoken: token\n\t\t})\t\t\n\t\tsetToLocalStorage<CustomToken>(TOKEN_STORAGE_KEY, {token});\n\t}\n\n\tprivate goToLogin() {\n\t\tthis.props.history.push(ROUTES_URLS.LOGIN);\n\t}\n\n\tprivate goToDashboard() {\n\t\tthis.props.history.push(ROUTES_URLS.DASHBOARD);\n\t}\n\n\tprivate get isLoggedIn() {\n\t\treturn !!this.state.token;\n\t}\n\n\tprivate renderHeader() {\n\t\treturn (\n\t\t\t<header className='header'>\n\t\t\t\t{ routes.map((link: AppRoute, indx: number) => {\n\t\t\t\t\treturn link.isHidden ? null :\t<Link key={indx}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tto={link.path}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{link.title}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t\t<button onClick={this.logOut}>\n\t\t\t\t\t\tLog Out\n\t\t\t\t</button>\n\t\t\t</header>\n\t\t)\n\t}\n\n\tprivate logOut = () => {\n\t\tthis.setState(INITIAL_STATE);\n\t\tthis.goToLogin();\n\t}\n\n\tprivate renderContent() {\n\t\treturn (\n\t\t\t<main className='main'>\n\t\t\t\t<Switch>\n\t\t\t\t\t{routes.map(this.renderRoute)}\n\n\t\t\t\t\t<Route\tpath={ROUTES_URLS.AUTHORIZATION}\n\t\t\t\t\t\t\t\t\trender={(props: RouteChildrenProps) => { \n\t\t\t\t\t\t\t\t\t\treturn <Authorization {...props} onSetToken={this.setToken} />\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t\t<Redirect to={ROUTES_URLS.NOT_FOUND} />\n\t\t\t\t</Switch>\n\t\t\t</main>\n\t\t)\n\t}\n\n\tprivate renderRoute = (route: AppRoute, indx: number) => {\n\t\tif(route.isProtected) {\n\t\t\treturn  <ProtectedRoute key={indx} \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpath={route.path}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\texact={route.exact}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trender={route.render}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tisAuthenticated={this.isLoggedIn}\n\t\t\t \t\t\t\t/>\n\t\t}\n\t\telse {\n\t\t\treturn  <Route key={indx} \n\t\t\t\t\t\t\t\t\t\t path={route.path}\n\t\t\t\t\t\t\t\t\t\t exact={route.exact}\n\t\t\t\t\t\t\t\t\t\t render={(props) => {\n\t\t\t\t\t\t\t\t\t\t \treturn route.render({...props})\n\t\t\t\t\t\t\t\t\t\t }}\n\t\t\t\t\t\t\t/>\n\t\t}\n\t}\n\n\tpublic render() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t{ this.renderHeader() }\n\t\t\t\t{ this.renderContent() }\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nconst AppWithRouter = withRouter(App);\nexport { AppWithRouter as App };\n\n\n// \"homepage\": \"https://bullego.github.io/web-academy_OAuth/\",\n// \"predeploy\": \"npm run build\",\n// \"deploy\": \"gh-pages -d build\",","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { App } from './components/App';\nimport { BrowserRouter } from 'react-router-dom';\n\nconst application = \n\t<BrowserRouter>\n\t\t<App />\n\t</BrowserRouter>\n\nReactDOM.render(application, document.querySelector('#root'));"],"sourceRoot":""}